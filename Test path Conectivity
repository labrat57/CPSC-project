import java.util.Arrays;
import java.util.ArrayList;


public class pathConnectivness {
	 public static void main(String[] args) {

         String[] listOfPaths = {"AB", "BC", "CD"};
         //list of selected paths from Romeo
         double[] lengthOfPaths = {2.0, 4.0, 6.0};
         //length of selected paths
         int numberOfPoints = 4;
         //total number of points
         String[] listOfPoints = {"A","B","C","D"};
         //list of all points
         
         boolean pathConnected = true;

         for (int p = 0; p < numberOfPoints; p++) {
             //Check if all points are path connected
             if (!Arrays.asList(listOfPaths).contains(listOfPoints[p])) {
                 //The point is not in the list of paths therefore the set of paths is not path connected
                 // Since we only have 4 points, the only way for the points to not be path connected is if there exists a
                 //point not in a path for all paths
                 // makes it so this set will not be used as the best output
                 pathConnected = false;
                 break;
             }          
         }
         
         if (pathConnected) {
             System.out.println("All points are path connected!");
         } else {
             System.out.println("The set of paths is not path connected.");
             // Ends code
             System.exit(0);
         }
     }
 }
}
	
}
